// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/rsmarincu/billr/domain"
	mock "github.com/stretchr/testify/mock"
)

// RepositoryMock is an autogenerated mock type for the Repository type
type RepositoryMock struct {
	mock.Mock
}

// GetInvoice provides a mock function with given fields: ctx, invoiceId
func (_m *RepositoryMock) GetInvoice(ctx context.Context, invoiceId string) (domain.Invoice, error) {
	ret := _m.Called(ctx, invoiceId)

	var r0 domain.Invoice
	if rf, ok := ret.Get(0).(func(context.Context, string) domain.Invoice); ok {
		r0 = rf(ctx, invoiceId)
	} else {
		r0 = ret.Get(0).(domain.Invoice)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, invoiceId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRepositoryMock interface {
	mock.TestingT
	Cleanup(func())
}

// NewRepositoryMock creates a new instance of RepositoryMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRepositoryMock(t mockConstructorTestingTNewRepositoryMock) *RepositoryMock {
	mock := &RepositoryMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
